
---
# @see https://github.com/ansible/ansible/blob/devel/examples/hosts.yaml
# @see https://docs.ansible.com/ansible/latest/user_guide/intro_inventory.html#splitting-out-host-and-group-specific-data

all:

  # As variaveis aqui são padrão para todos os grupos e hosts. Podem ser
  # sobrescritas individualmente mais tarde
  vars:
    alb_manange_all: yes
    alb_manange_sanitycheck: yes
    alb_manange_common: yes

    alb_manange_haproxy: yes
    alb_manange_openresty: yes
    alb_manange_ufw: yes

    alb_auth_users:
      - username: adminuser
        password: "plain-password-for-adminuser"
      - username: "otheradminuser"
        password: "another-password-here"

    alb_dmz:
      - ip: 173.249.10.99
        name: aguia-pescadora-delta.etica.ai
      - ip: 167.86.127.220
        name: aguia-pescadora-echo.etica.ai
      - ip: 167.86.127.225
        name: aguia-pescadora-foxtrot.etica.ai

    #alb_bastion_hosts:
    #  - ip: 192.0.2.255
    #    name: "You Can Put Here Your Own IP"

    #alb_bastion_hosts:
    #  - ip: 192.0.2.255
    #    name: "You Can Put Here Your Own IP"

    alb_ufw_rules_always:
      - rule: limit
        port: 22
        proto: tcp
        comment: "[SSH Port] Allows access from any IP on :22 on this ap-alb-cluster-demo instead of using alb_bastion_hosts"
      - rule: allow
        port: 8404
        proto: tcp
        comment: "[HAProxy Stats] aaAllows access from any IP on :8404 on this ap-alb-cluster-demo instead of using alb_bastion_hosts"
      - rule: allow
        port: 80
        proto: tcp
        comment: "HTTP"
      - rule: allow
        port: 443
        proto: tcp
        comment: "HTTPS"

    alb_haproxy_stats_enabled: yes
    alb_haproxy_stats_ip: 0.0.0.0 # 0.0.0.0 means exposed for everyone. Use firewall!
    alb_haproxy_stats_port: 8404
    alb_haproxy_stats_uri: "/haproxy?stats"
    alb_haproxy_stats_realm: "{{ alb_name }}: {{ inventory_hostname }}"

    # This will allow haproxy stats ask password without enforcing IP ranges
    alb_haproxy_stats_trusted_hosts_only: false

    # Note, just to avoid reach limits on Let'Encript, we will disable
    # for some time the letsencrypt default clause
    alb_letsencrypt_default: "return false"


    ## Ansible Role davidwittman.redis
    # Common to all nodes
    redis_version: 5.0.5
    redis_password: "hi1Zba2dmDor1xiPrgLrk4DYuB8i7evgGDNsPHj3NXE45ux1yCfOmsIOpaCC9I1Sm1qz4ABlqW5lhF4G" # openssl rand 60 | openssl base64 -A

    # This means on redis-cli, will need to use
    # redis-cli -a 'hi1Zba2dmDor1xiPrgLrk4DYuB8i7evgGDNsPHj3NXE45ux1yCfOmsIOpaCC9I1Sm1qz4ABlqW5lhF4G'
    # echo -e  "*2\r\n\$4\r\nAUTH\r\n\$16\r\nhi1Zba2dmDor1xiPrgLrk4DYuB8i7evgGDNsPHj3NXE45ux1yCfOmsIOpaCC9I1Sm1qz4ABlqW5lhF4G\r\n*1\r\n\$4\r\nINFO\r\n" | nc aguia-pescadora-delta.etica.ai 6379

    alb_ufw_autoapply_dmz: yes           # no: ALB/UFW ignore alb_dmz: []
    alb_ufw_autoapply_bastion_hosts: no # no: ALB/UFW ignore alb_bastion_hosts: []
    alb_ufw_autoapply_jump_boxes: no    # no: ALB/UFW ignore alb_jump_boxes: []

    nlb_raw_bottom: |
        frontend ft_redis
             bind *:6380 name redis
             default_backend bk_redis
        backend bk_redis
             option tcp-check
             tcp-check send AUTH\ hi1Zba2dmDor1xiPrgLrk4DYuB8i7evgGDNsPHj3NXE45ux1yCfOmsIOpaCC9I1Sm1qz4ABlqW5lhF4G\r\n
             tcp-check expect string +OK
             tcp-check send PINGrn
             tcp-check expect string +PONG
             tcp-check send info replicationrn
             tcp-check expect string role:master
             tcp-check send QUITrn
             tcp-check expect string +OK
             server R1 173.249.10.99:6379 check inter 5s
             server R2 167.86.127.220:6379 check inter 5s
             server R3 167.86.127.225:6379 check inter 5s


  children:
    cluster_all_nodes:
      children:
        delta:
        echo:
        foxtrot:
    cluster_leader:
      children:
        delta:
    redis_leader:
      children:
        delta:
    redis_follower:
      children:
        echo:
      vars:
        redis_slaveof: aguia-pescadora-delta.etica.ai 6379
    redis_sentinel:
      children:
        foxtrot:
      vars:
        redis_sentinel_monitors:
          - name: master01
            host: aguia-pescadora-delta.etica.ai
            port: 6379

    delta:
      hosts:
        aguia-pescadora-delta.etica.ai

    echo:
      hosts:
        aguia-pescadora-echo.etica.ai

    foxtrot:
      hosts:
        aguia-pescadora-foxtrot.etica.ai

